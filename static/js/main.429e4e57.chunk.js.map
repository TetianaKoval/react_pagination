{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","props","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","Array","from","keys","className","classNames","disabled","href","onClick","map","number","active","items","to","numbers","n","push","getNumbers","takeOnlyNumber","string","replace","item","App","useState","changePage","changePerPage","visibleItems","filter","index","length","id","value","onChange","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"2NASaA,EAA6B,SAACC,GACzC,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAEIC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQC,MAAMC,KAAKD,MAAMJ,GAAYM,QAE3C,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UACEC,IAAW,YAAa,CAAEC,SAA0B,IAAhBX,IAFxC,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QAAS,WACa,IAAhBb,GAIJC,EAAaD,EAAc,IAV/B,oBAgBDK,EAAMS,KAAI,SAACC,GAAD,OACT,oBAEEN,UACEC,IAAW,YAAa,CAAEM,OAAQD,EAAS,IAAMf,IAHrD,SAME,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMG,EAAS,GACnBF,QAAS,kBAAMZ,EAAac,EAAS,IAJvC,SAMGA,EAAS,KAXPA,MAeT,oBAAIN,UACFC,IAAW,YAAa,CAAEC,SAAUX,IAAgBE,IADtD,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBE,EAC/BW,QAAS,WACHb,IAAgBE,GAIpBD,EAAaD,EAAc,IAV/B,0BC1DJiB,ECNC,SAAoBV,EAAcW,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIb,EAAMa,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEpB,SAASG,EAAeC,GACtB,OAAQA,EAAOC,QAAQ,UAAW,IAGpC,IAAMN,EAAUF,EAAMH,KAAI,SAAAY,GAAI,OAAIH,EAAeG,MAEpCC,EAAgB,WAC3B,MAAkCC,mBAAS,GAA3C,mBAAO5B,EAAP,KAAoB6B,EAApB,KACA,EAAiCD,mBAAS,GAA1C,mBAAO7B,EAAP,KAAgB+B,EAAhB,KAEMC,EAAe,YAAId,GACtBe,QAAO,SAACN,EAAMO,GACb,OAAId,EAAQc,IAAUjC,EAAcD,GAC/BoB,EAAQc,GAASjC,EAAcD,EAAUA,EAE1C2B,EAIG,QAGX,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiCuB,EAAeQ,EAAa,IAD7D,cACsER,EAAeQ,EAAaA,EAAaG,OAAS,IADxH,eACkIjB,EAAMiB,OADxI,OAIA,sBAAKzB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOrC,EACPsC,SAAU,SAACC,GACTT,EAAW,GACXC,GAAeQ,EAAMC,OAAOH,QAPhC,UAUE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEX,MAAOmB,EAAMiB,OACbnC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACwC,GAAD,OAAUZ,EAAWY,MAErC,6BACGV,EACEjB,KAAI,SAACY,GAAD,OACH,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEtEpCgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.429e4e57.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination:React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = Array.from(Array(pagesCount).keys());\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={\n            classNames('page-item', { disabled: currentPage === 1 })\n          }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage === 1) {\n                return;\n              }\n\n              onPageChange(currentPage - 1);\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pages.map((number) => (\n          <li\n            key={number}\n            className={\n              classNames('page-item', { active: number + 1 === currentPage })\n            }\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number + 1}`}\n              onClick={() => onPageChange(number + 1)}\n            >\n              {number + 1}\n            </a>\n          </li>\n        ))}\n        <li className={\n          classNames('page-item', { disabled: currentPage === pagesCount })\n        }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesCount}\n            onClick={() => {\n              if (currentPage === pagesCount) {\n                return;\n              }\n\n              onPageChange(currentPage + 1);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nfunction takeOnlyNumber(string: string) {\n  return +string.replace(/[^0-9]/g, '');\n}\n\nconst numbers = items.map(item => takeOnlyNumber(item));\n\nexport const App: React.FC = () => {\n  const [currentPage, changePage] = useState(1);\n  const [perPage, changePerPage] = useState(5);\n\n  const visibleItems = [...items]\n    .filter((item, index) => {\n      if (numbers[index] <= currentPage * perPage\n        && numbers[index] > currentPage * perPage - perPage) {\n        return (\n          item\n        );\n      }\n\n      return null;\n    });\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${takeOnlyNumber(visibleItems[0])} - ${takeOnlyNumber(visibleItems[visibleItems.length - 1])} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              changePage(1);\n              changePerPage(+event.target.value);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => changePage(page)}\n      />\n      <ul>\n        {visibleItems\n          .map((item) => (\n            <li data-cy=\"item\" key={item}>{item}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}